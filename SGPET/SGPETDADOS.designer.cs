#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SGPET
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SGPETDADOS")]
	public partial class SGPETDADOSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAgendamento(Agendamento instance);
    partial void UpdateAgendamento(Agendamento instance);
    partial void DeleteAgendamento(Agendamento instance);
    #endregion
		
		public SGPETDADOSDataContext() : 
				base(global::SGPET.Properties.Settings.Default.SGPETDADOSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SGPETDADOSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGPETDADOSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGPETDADOSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGPETDADOSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Agendamento> Agendamentos
		{
			get
			{
				return this.GetTable<Agendamento>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agendamentos")]
	public partial class Agendamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Diadasemana;
		
		private string _Animal;
		
		private string _Proprietario;
		
		private string _Fone;
		
		private string _Banho;
		
		private System.Nullable<System.DateTime> _Chegada;
		
		private System.Nullable<System.DateTime> _Saida;
		
		private string _Observacao;
		
		private System.Nullable<decimal> _Total;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDiadasemanaChanging(string value);
    partial void OnDiadasemanaChanged();
    partial void OnAnimalChanging(string value);
    partial void OnAnimalChanged();
    partial void OnProprietarioChanging(string value);
    partial void OnProprietarioChanged();
    partial void OnFoneChanging(string value);
    partial void OnFoneChanged();
    partial void OnBanhoChanging(string value);
    partial void OnBanhoChanged();
    partial void OnChegadaChanging(System.Nullable<System.DateTime> value);
    partial void OnChegadaChanged();
    partial void OnSaidaChanging(System.Nullable<System.DateTime> value);
    partial void OnSaidaChanged();
    partial void OnObservacaoChanging(string value);
    partial void OnObservacaoChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    #endregion
		
		public Agendamento()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diadasemana", DbType="VarChar(50)")]
		public string Diadasemana
		{
			get
			{
				return this._Diadasemana;
			}
			set
			{
				if ((this._Diadasemana != value))
				{
					this.OnDiadasemanaChanging(value);
					this.SendPropertyChanging();
					this._Diadasemana = value;
					this.SendPropertyChanged("Diadasemana");
					this.OnDiadasemanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Animal", DbType="VarChar(50)")]
		public string Animal
		{
			get
			{
				return this._Animal;
			}
			set
			{
				if ((this._Animal != value))
				{
					this.OnAnimalChanging(value);
					this.SendPropertyChanging();
					this._Animal = value;
					this.SendPropertyChanged("Animal");
					this.OnAnimalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Proprietario", DbType="VarChar(50)")]
		public string Proprietario
		{
			get
			{
				return this._Proprietario;
			}
			set
			{
				if ((this._Proprietario != value))
				{
					this.OnProprietarioChanging(value);
					this.SendPropertyChanging();
					this._Proprietario = value;
					this.SendPropertyChanged("Proprietario");
					this.OnProprietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fone", DbType="VarChar(50)")]
		public string Fone
		{
			get
			{
				return this._Fone;
			}
			set
			{
				if ((this._Fone != value))
				{
					this.OnFoneChanging(value);
					this.SendPropertyChanging();
					this._Fone = value;
					this.SendPropertyChanged("Fone");
					this.OnFoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banho", DbType="VarChar(50)")]
		public string Banho
		{
			get
			{
				return this._Banho;
			}
			set
			{
				if ((this._Banho != value))
				{
					this.OnBanhoChanging(value);
					this.SendPropertyChanging();
					this._Banho = value;
					this.SendPropertyChanged("Banho");
					this.OnBanhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chegada", DbType="DateTime2")]
		public System.Nullable<System.DateTime> Chegada
		{
			get
			{
				return this._Chegada;
			}
			set
			{
				if ((this._Chegada != value))
				{
					this.OnChegadaChanging(value);
					this.SendPropertyChanging();
					this._Chegada = value;
					this.SendPropertyChanged("Chegada");
					this.OnChegadaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saida", DbType="DateTime2")]
		public System.Nullable<System.DateTime> Saida
		{
			get
			{
				return this._Saida;
			}
			set
			{
				if ((this._Saida != value))
				{
					this.OnSaidaChanging(value);
					this.SendPropertyChanging();
					this._Saida = value;
					this.SendPropertyChanged("Saida");
					this.OnSaidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacao", DbType="VarChar(MAX)")]
		public string Observacao
		{
			get
			{
				return this._Observacao;
			}
			set
			{
				if ((this._Observacao != value))
				{
					this.OnObservacaoChanging(value);
					this.SendPropertyChanging();
					this._Observacao = value;
					this.SendPropertyChanged("Observacao");
					this.OnObservacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
